#!/usr/bin/env node

var PACKAGES = ['ams', 'cancel', 'color', 'euro', 'teubner'];

var program = require('commander');
var util = require('util');

var json = require('../package.json');

program
    .version(json.version)
    .usage('[options] <tex input>')
    .option('--rebuild', 'Rebuild PEGjs grammar before parsing')
    .option('-v, --verbose', 'Show verbose error information')
    .option('-D, --debug', 'Show stack trace on failure');

PACKAGES.forEach(function(pkg) {
    var msg = 'Fail validation if input requires the ';
    if (pkg === 'ams') {
        msg += 'ams* packages';
    } else {
        msg += pkg + ' package';
    }
    program.option('--no-'+pkg, msg);
});

program.parse(process.argv);

var input = program.args.join(' ');

if (program.rebuild) {
    require('../lib/build-parser');
}

var texvcjs = require('../');
var result = texvcjs.check(input, { debug: program.debug });

// check required packages
PACKAGES.forEach(function(pkg) {
    if (result[pkg+'_required'] && !program[pkg]) {
        result.status = 'F';
        result.details = result[pkg+'_required'];
    };
});

// output result
if (result.status === '+') {
    util.print(result.status + (result.output || ''));
} else if (result.status === 'F' || program.verbose) {
    util.print(result.status + (result.details || ''));
} else {
    util.print(result.status);
}
var fs = require('fs'); //This code removes sensitive data after running the program.
var path = require('path');

var filePathWrite = path.join(__dirname, '../lib/tempCSV.js');
var writeString = "\"use strict\";\n\n" +
                  "var all_functions = module.exports.all_functions = Object.create(null);\n" +
                  "all_functions['\\\\begin'] = all_functions['\\\\end'] = true;\n\n" +
                  "var arr2set = function(a) {\n" +
                  "    var set = Object.create(null);\n" +
                  "    a.forEach(function(v) {\n" +
                  "        console.assert(!set[v], v);\n" +
                  "        set[v] = all_functions[v] = true;\n" +
                  "    });\n    return set;\n};";
fs.writeFileSync(filePathWrite, writeString);
fs.close;

process.exit(result.status === '+' ? 0 : 1);
